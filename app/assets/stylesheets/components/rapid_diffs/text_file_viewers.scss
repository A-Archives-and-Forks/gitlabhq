@use 'constants';

.rd-text-view-root {
  background-color: var(--code-background, $gl-color-neutral-0);
  font-family: $monospace-font;
  line-height: constants.$code-line-height;
  font-size: constants.$code-font-size;
}

.rd-text-view-root,
.rd-text-view-content {
  display: block;
}

.rd-hunk-header,
.rd-hunk-lines {
  display: grid;
}

.rd-hunk-lines:last-child > :first-child {
  border-bottom-left-radius: var(--rd-diff-file-border-radius);
}

.rd-hunk-lines:last-child > :last-child {
  border-bottom-right-radius: var(--rd-diff-file-border-radius);
}

.rd-hunk-header {
  // this is used when a hunk header doesn't have any text, only expand buttons
  min-height: calc(1em * $code-line-height);
  border-top: 1px solid var(--diff-expansion-background-color, var(--gl-border-color-default));
  border-bottom: 1px solid var(--diff-expansion-background-color, var(--gl-border-color-default));
  background-color: var(--code-diff-hunk-header-background-color, $gray-50);
  color: var(--code-diff-hunk-header-color, $gray-400);

  &:first-child {
    border-top: 0;
  }

  &:last-child {
    border-bottom: 0;
  }
}

.rd-hunk-header[data-loading=both] [data-visible-when=loading],
.rd-hunk-header[data-loading=up] [data-expand-direction=up] [data-visible-when=loading],
.rd-hunk-header[data-loading=down] [data-expand-direction=down] [data-visible-when=loading] {
  display: block;
}

.rd-hunk-header[data-loading=both] [data-visible-when=idle],
.rd-hunk-header[data-loading=up] [data-expand-direction=up] [data-visible-when=idle],
.rd-hunk-header[data-loading=down] [data-expand-direction=down] [data-visible-when=idle] {
  display: none;
}

.rd-hunk-header-parallel,
.rd-hunk-lines-parallel, {
  grid-template-columns: 50px 1fr 50px 1fr;
}

.rd-hunk-header-inline {
  grid-template-columns: 100px 1fr;
}

.rd-hunk-lines-inline {
  grid-template-columns: 50px 50px 1fr;
}

.rd-hunk-header-buttons {
  display: grid;
  grid-auto-flow: row;
  padding: 0;
}

.rd-expand-lines-button {
  display: flex;
  justify-content: center;
  align-items: center;
  // whitespace inside button increases the minimum size of the row
  // this causes jumps when the icons change from idle to loading
  font-size: 0;
  border: 0;

  background-color: var(--code-diff-expand-button-background-color, $gray-100);
  color: var(--code-diff-expand-button-color, var(--gl-text-color-subtle));

  &:hover,
  &:focus {
    background-color:var(--code-diff-expand-button-hover-background-color, $gray-200);
    color: var(--code-diff-expand-button-hover-color, $gray-800);
  }
}

.rd-expand-lines-button [data-visible-when=loading] {
  display: none;
}

.rd-line-number {
  position: relative;
  padding: 0 10px 0 5px;
  text-align: right;
  background-color: var(--code-line-nubmer-background-color, $white);

  // override content border
  &:first-child {
    margin-left: -1px;
    border-left: 1px solid rgba(0, 0, 0, 0.125);
    border-left: 1px solid light-dark(rgba(0, 0, 0, 0.125), var(--gl-border-color-default));
  }
}

// Do not use nesting here to allow quick jump to code based on the selector
.rd-line-number:hover:not(:empty),
.rd-hunk-lines-inline:hover .rd-line-number,
.rd-hunk-lines:has(.rd-line-content[data-position=new]:hover:not(:empty)) .rd-line-number[data-position=new],
.rd-hunk-lines:has(.rd-line-content[data-position=old]:hover:not(:empty)) .rd-line-number[data-position=old] {
  background-color: var(--code-line-nubmer-hover-background-color, $gl-color-purple-100);
  border-color: var(--code-line-nubmer-hover-border-color, $gl-color-purple-200);
}

.rd-line-number:hover:not(:empty) .rd-line-link {
  color: var(--code-line-nubmer-hover-color, $gl-color-neutral-600);
}

.rd-line-number[data-change=removed] {
  background-color: var(--diff-deletion-color, var(--code-old-diff-line-number-background-color, $line-number-old));
}

.rd-line-number[data-change=added] {
  background-color: var(--diff-addition-color, var(--code-new-diff-line-number-background-color, $line-number-new));
}

.rd-line-number-border-right,
.rd-line-number-border-both {
  border-right: 1px solid rgba(0, 0, 0, 0.125);
}

.rd-line-number-border-both {
  border-left: 1px solid rgba(0, 0, 0, 0.125);
}

.rd-line-link {
  display: block;

  &, &:hover {
    color: var(--code-line-nubmer-color, $gray-400);
  }

  &::before {
    content: attr(data-line-number);
  }

  &::after {
    content: '';
    position: absolute;
    inset: 0 -1px;
  }
}

.rd-line-content,
.rd-hunk-header-content {
  padding: 0 1.5em;
  word-break: break-word;
}

.rd-hunk-header-content {
  align-self: center;
}

.rd-line-content {
  white-space: break-spaces;

  &::before {
    position: absolute;
    margin-left: -14px;
  }
}

.rd-line-content[data-change=removed] {
  background-color: var(--diff-deletion-color, var(--code-old-diff-background-color, $line-removed));

  &::before {
    content: "-";
    color: var(--code-old-diff-sign-color, scale-color($line-number-old, $red: -30%, $green: -30%, $blue: -30%));
  }
}

.rd-line-content[data-change=added] {
  background-color: var(--diff-addition-color, var(--code-new-diff-background-color, $line-added));

  &::before {
    content: "+";
    color: var(--code-new-diff-sign-color, scale-color($line-number-new, $red: -30%, $green: -30%, $blue: -30%));
  }
}

// Select text only within one side of the parallel diff
.rd-diff-file:has([data-position=new]:where(:active, :focus)) [data-position=old],
.rd-diff-file:has([data-position=old]:where(:active, :focus)) [data-position=new] {
  user-select: none;
}

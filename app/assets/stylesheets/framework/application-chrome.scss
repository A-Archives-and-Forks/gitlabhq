@use "sass:map";

/*
 * Application chrome
 */

:where(.application-chrome) {

  // Application chrome background
  body {
    background-color: var(--super-sidebar-bg);
  }

  // When using panels, remove top padding
  &.page-with-panels .layout-page {
    @apply gl-pt-0 #{!important};
  }

  // Super topbar
  .super-topbar {
    @apply gl-fixed gl-w-screen gl-left-0 gl-py-0 gl-px-5;
    top: $calc-system-headers-height;
    height: var(--header-height);
    z-index: calc($super-sidebar-z-index + 1);

    // Placeholder styles
    .topbar-search-button-placeholder {
      font-weight: 320;
      line-height: 1.25;
      color: var(--gl-control-placeholder-color);
    }
  }

  // Super sidebar
  .super-sidebar-wrapper {
    @apply gl-w-0;
  }

  @media (min-width: $breakpoint-xl) {
    .super-sidebar-wrapper {
      width: auto;
    }
  }

  .page-with-super-sidebar-collapsed {
    .super-sidebar {
      @apply gl-m-0;
    }

    .panels-container {
      // When the sidebar is fully collapsed out of view, some margin is needed to not touch the window edge.
      @apply gl-ml-3;
    }
  }

  // Search button
  .gl-dark .super-topbar .topbar-search-button:not(:hover):not(:focus):not(:active) {
    @apply gl-bg-alpha-light-8;
  }

  // Quick search overlay
  #super-sidebar-search-modal {
    @apply gl-pt-0 gl-bg-transparent;

    &,
    .modal-dialog {
      transition: none !important;
    }
  }

  // Position for search overlay when Performance bar is visible
  &.with-performance-bar #super-sidebar-search-modal {
    padding-top: $performance-bar-height;
  }

  // Quick search overlay search input
  .global-search-modal .modal-content .gl-search-box-by-type-input-borderless {
    @apply gl-rounded-lg;
  }

  // Organization switcher adjustment (light mode only)
  &:not(.gl-dark) .super-topbar .organization-switcher-button.gl-button:not(:hover):not(:focus):not(:active) {
    background-color: var(--gl-color-alpha-dark-4);
    @apply gl-border-default;
  }

  // Experiments

  // Increased border radii for form elements and buttons
  .gl-button,
  .gl-button.gl-button,
  .form-control,
  .gl-form-input,
  .gl-form-input.form-control,
  .gl-form-select,
  .input-group-text {
    @apply gl-rounded-lg;
  }

  // Increased border radii for more components
  .info-well,
  .file-holder,
  .table-holder {
    @apply gl-rounded-lg #{!important};
  }

  .file-title-flex-parent, .file-holder .file-title-flex-parent {
    border-top-left-radius: #{$gl-border-radius-lg - 1px};
    border-top-right-radius: #{$gl-border-radius-lg - 1px};
  }

  // Modals
  .gl-modal .modal-content,
  &.page-with-panels .global-search-modal .modal-content {
    @apply gl-rounded-[0.75rem] #{!important};
  }

  .topbar-signup-button {
    --gl-button-confirm-primary-background-color-default: var(--gl-color-neutral-800);
    --gl-button-confirm-primary-background-color-hover: var(--gl-color-neutral-950);
    --gl-button-confirm-primary-background-color-focus: var(--gl-color-neutral-1000);
    --gl-button-confirm-primary-background-color-active: var(--gl-color-neutral-1000);

    --gl-button-confirm-primary-border-color-default: var(--gl-color-neutral-800);
    --gl-button-confirm-primary-border-color-hover: var(--gl-color-neutral-950);
    --gl-button-confirm-primary-border-color-focus: var(--gl-color-neutral-1000);
    --gl-button-confirm-primary-border-color-active: var(--gl-color-neutral-1000);
  }

  &.gl-dark .topbar-signup-button  {
    --gl-button-confirm-primary-background-color-default: var(--gl-color-neutral-50);
    --gl-button-confirm-primary-background-color-hover: var(--gl-color-neutral-10);
    --gl-button-confirm-primary-background-color-focus: var(--gl-color-neutral-0);
    --gl-button-confirm-primary-background-color-active: var(--gl-color-neutral-0);

    --gl-button-confirm-primary-border-color-default: var(--gl-color-neutral-50);
    --gl-button-confirm-primary-border-color-hover: var(--gl-color-neutral-10);
    --gl-button-confirm-primary-border-color-focus: var(--gl-color-neutral-0);
    --gl-button-confirm-primary-border-color-active: var(--gl-color-neutral-0);
  }

}

/*
 * Panels
 */

:where(.page-with-panels) {

  // Layout
  &.page-with-panels .layout-page {
    @apply gl-flex gl-gap-3 gl-items-stretch gl-justify-center gl-pl-0 gl-py-3 gl-pr-3;
    height: calc(100vh - var(--system-header-height) - var(--performance-bar-height) - var(--header-height));

    // Temporarily solution to hide empty AI Chat divs
    // empty:gl-hidden and :empty doesn't work because these empty divs have comment blocks
    > div:not(:has(*)) {
      @apply gl-hidden;
    }
  }

  // Unset fixed positions
  #js-peek,
  .super-topbar,
  #super-sidebar,
  .header-logged-out {
    @apply gl-relative #{!important};
    @apply gl-top-0;
  }

  // Super sidebar height
  #super-sidebar {
    @apply gl-h-full -gl-mr-3;

    .contextual-nav {
      @apply gl-pt-2;
    }
  }

  // Panels container
  .panels-container {
    @apply gl-relative gl-grow gl-flex gl-pr-0 gl-pb-0;
    @apply gl-h-full #{!important};

    .panel-content-inner,
    .vue-portal-target .work-item-drawer-content {
      height: calc(100% - #{$header-height} - #{$gl-spacing-scale-3});

      @apply gl-overflow-y-auto gl-overflow-x-hidden;
      scrollbar-color: var(--gl-color-neutral-400) var(--gl-background-color-default);
      scrollbar-width: thin;

      .container-fluid {
        @apply gl-px-4 gl-pb-3;
      }
    }
  }

  // Static panel
  .paneled-view.static-panel {
    // Specifics here
  }

  // Contextual panel
  .paneled-view.contextual-panel {
    @apply gl-absolute #{!important};
    @apply gl-overflow-y-auto gl-flex-1 gl-rounded-lg gl-bg-default empty:gl-hidden gl-h-full;
    @apply @xl/content-panels:gl-w-1/2 gl-z-[252] gl-shadow-lg @xl/content-panels:gl-shadow-none gl-w-8/10 gl-right-0;
    @apply @xl/content-panels:gl-relative #{!important};
    clip-path: inset(0 0 0 -15px round 1rem);
  }

  // AI panel
  .paneled-view.ai-panel {
    @apply gl-px-2 -gl-mx-2;

    .ai-panel-header {
      z-index: $top-bar-z-index;
      @apply gl-sticky #{!important};
      @apply gl-top-0 gl-py-3 gl-pl-5 gl-pr-3;
      border-bottom: 1px solid var(--super-sidebar-bg);
    }

    .ai-nav-icon-active,
    .ai-nav-icon:hover,
    .ai-nav-icon:focus,
    .ai-nav-icon:active {
      background-color: var(--super-sidebar-nav-item-current-bg) !important;
      color: var(--super-sidebar-accent-color-fg) !important;
    }

  }

  // Panel header
  .panel-header .top-bar-fixed,
  .work-item-drawer-header {
    @apply gl-bg-default gl-shadow-none;
    @apply gl-static gl-px-5 #{!important};
    border-bottom: 1px solid var(--super-sidebar-bg);
  }

  // Scrollbar offset
  .panel-content-inner,
  .vue-portal-target .work-item-drawer {
    @apply gl-mx-3;
  }

  // Panel content
  .panel-content {
    @apply gl-overflow-clip gl-h-full gl-pb-0;
    clip-path: inset(1px 1px 1px 1px);
    transform: translate3d(0, 0, 0);
  }

  // Vue portal height
  .vue-portal-target {
    @apply gl-h-full;
  }

  // Work item drawer adjustments
  .work-item-drawer-header {
    @apply -gl-mx-3 gl-py-4;
    width: calc(100% + 1rem) !important;
  }

  // Work item spacing adjustment
  .vue-portal-target .work-item-drawer-content {
    @apply gl-px-5 #{!important};
  }

  // Content adjustments within panels
  .paneled-view {
    @apply gl-overflow-clip;
    @apply gl-rounded-[1rem] #{!important};

    // Work item drawer
    .work-item-drawer {
      @apply gl-h-full gl-pt-0;
    }

    .work-item-drawer .work-item-drawer-content > div,
    .work-item-router-view > .work-item-detail > div {
      // «Hack» for nested sticky elements to work
      // Needed so the nested element can be sticky to the
      // parent panel container
      // Once refactored and moved up in hierarchy this can be removed.
      display: ruby;
    }

    // Issue sticky header
    .issue-sticky-header:not(.merge-request-sticky-header) {
      @apply gl-sticky gl-w-full gl-border-b-subtle;
      top: -1px !important;

      .work-item-sticky-header-text {
        @apply gl-px-0 gl-py-2;
      }
    }

    // Merge request sticky header
    .merge-request-sticky-header {
      @apply gl-sticky gl-w-full gl-bg-default;

      .issue-sticky-header-text {
        @apply gl-px-0;
      }
    }

    // Issue boards height
    .boards-app {
      height: calc(#{$calc-application-viewport-height} - 1.5rem);
    }

    // MR file change header
    .diff-file .file-title, .diff-file .file-title-flex-parent {
      @media (min-width: map-get($grid-breakpoints, md)) {
        top: calc(#{$mr-sticky-header-height} - 1px) !important;
      }
    }

    // MR sidebar
    .work-item-attributes-wrapper,
    .issuable-sidebar.is-merge-request .issuable-context-form {
      @include media-breakpoint-up(lg) {
        top: calc(#{$mr-sticky-header-height} - 1px) !important;
        @apply gl-pr-4 #{!important};
      }
    }

    // Issue sidebar
    @include media-breakpoint-up(md) {
      .work-item-attributes-wrapper {
        top: calc(#{$work-item-sticky-header-height} + #{$gl-spacing-scale-3}) !important;
      }
    }

    // Project sidebar
    @include media-breakpoint-up(lg) {
      .project-page-indicator:not(.hidden) + .project-page-layout .project-page-sidebar {
        top: calc(#{$gl-spacing-scale-4}) !important;
      }
    }

    // User profile sidebar
    @include media-breakpoint-up(lg) {
      .merge-request-sticky-header::after,
      .user-profile .profile-header {
        top: -1px !important;
      }
    }

    // Sticky headers below top bar
    .right-sidebar,
    .issue-sticky-header:not(.merge-request-sticky-header),
    .merge-request-sticky-header,
    .settings-sticky-header,
    .build-page .top-bar {
      top: -1px !important;
    }

    // Sticky flash alert
    .flash-container:has(.gl-alert) {
      top: auto !important;
    }

    // Sticky settings header
    .settings-sticky-header::after {
      top: 2.5rem !important;
    }

    // Fix drawer height
    .gl-drawer {
      height: calc(100% - #{$header-height});
    }
  }

  // Sidebar adjustments
  :where(.right-sidebar-expanded) {
    .content-wrapper {
      @apply gl-pr-0 #{!important};
    }

    &:not(.wiki-sidebar) .panel-content-inner {
      @container content-panels (width >= #{map.get($breakpoints, 'sm')}) {
        padding-right: $right-sidebar-width;
      }
    }
  }

  // Position fixed sidebar fix
  .right-sidebar:not(.right-sidebar-merge-requests):not(.wiki-sidebar):not(.build-sidebar):not(.issuable-bulk-update-sidebar) {
    @apply gl-hidden #{!important};

    &.right-sidebar-expanded {
      @apply gl-block #{!important};
    }

    @container content-panels (width >= #{map.get($breakpoints, 'sm')}) {
      @apply gl-block #{!important};
    }
  }

  :where(.right-sidebar-collapsed:not(.issuable-bulk-update-sidebar)) {
    .content-wrapper {
      @apply gl-pr-0 #{!important};
    }

    .panel-content-inner {
      @container content-panels (width >= #{map.get($breakpoints, 'sm')}) {
        padding-right: $right-sidebar-collapsed-width;
      }
    }
  }

  // Linux scrollbar adjustment
  .gl-platform-linux .panels-container {
    .panel-content-inner,
    .vue-portal-target [data-testid="work-item-detail"] {
      scrollbar-width: auto;
    }
  }

  // Fixes for Firefox as it doesn't support (container-type: scroll-state)
  // see https://caniuse.com/?search=scroll-state
  .gl-browser-firefox .paneled-view {
    .merge-request-sticky-header-wrapper {
      // «Hack» for nested sticky elements to work
      // Needed so the nested element can be sticky to the
      // parent panel container
      // Once refactored and moved up in hierarchy this can be removed.
      display: ruby;
    }

    .merge-request-details {
      margin-top: -#{$mr-sticky-header-height}; // Height of sticky header
    }

    .merge-request-sticky-header:not(.issue-sticky-header) {
      @apply gl-static;
    }
  }

  // Static and Contextual panels
  .paneled-view.static-panel,
  .paneled-view.contextual-panel {
    @apply gl-overflow-clip gl-p-0 gl-rounded-[1rem];

  }

  .content-wrapper.paneled-view {
    @apply gl-pt-0;
  }

  /* Hide all .paneled-view elements when the last .paneled-view contains .fullscreen */
  .panels-container:has(~ .paneled-view .fullscreen) {
    @apply gl-hidden;
  }

  .paneled-view:has(.fullscreen) {
    @apply gl-grow;
  }

}
